{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bharg\\\\OneDrive\\\\Desktop\\\\JOBs\\\\Application\\\\ramp-fe-challenge\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport { Fragment, useCallback, useEffect, useMemo } from \"react\";\nimport { InputSelect } from \"./components/InputSelect\";\nimport { Instructions } from \"./components/Instructions\";\nimport { Transactions } from \"./components/Transactions\";\nimport { useEmployees } from \"./hooks/useEmployees\";\nimport { usePaginatedTransactions } from \"./hooks/usePaginatedTransactions\";\nimport { useTransactionsByEmployee } from \"./hooks/useTransactionsByEmployee\";\nimport { EMPTY_EMPLOYEE } from \"./utils/constants\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function App() {\n  _s();\n  const {\n    data: employees,\n    ...employeeUtils\n  } = useEmployees();\n  const {\n    data: paginatedTransactions,\n    ...paginatedTransactionsUtils\n  } = usePaginatedTransactions();\n  const {\n    data: transactionsByEmployee,\n    ...transactionsByEmployeeUtils\n  } = useTransactionsByEmployee();\n  const transactions = useMemo(() => {\n    var _ref, _paginatedTransaction;\n    return (_ref = (_paginatedTransaction = paginatedTransactions === null || paginatedTransactions === void 0 ? void 0 : paginatedTransactions.data) !== null && _paginatedTransaction !== void 0 ? _paginatedTransaction : transactionsByEmployee) !== null && _ref !== void 0 ? _ref : null;\n  }, [paginatedTransactions, transactionsByEmployee]);\n  const loadAllTransactions = useCallback(async () => {\n    transactionsByEmployeeUtils.invalidateData();\n    await employeeUtils.fetchAll();\n    await paginatedTransactionsUtils.fetchAll();\n  }, [employeeUtils, paginatedTransactionsUtils, transactionsByEmployeeUtils]);\n  const loadTransactionsByEmployee = useCallback(async employeeId => {\n    paginatedTransactionsUtils.invalidateData();\n    // Bug 3 FIxed: Cannot select All Employees after selecting an employee\n    if (employeeId) {\n      await transactionsByEmployeeUtils.fetchById(employeeId);\n    }\n    await paginatedTransactionsUtils.fetchAll();\n  }, [paginatedTransactionsUtils, transactionsByEmployeeUtils]);\n  useEffect(() => {\n    if (employees === null && !employeeUtils.loading) {\n      loadAllTransactions();\n    }\n  }, [employeeUtils.loading, employees, loadAllTransactions]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"MainContainer\",\n      children: [/*#__PURE__*/_jsxDEV(Instructions, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"RampBreak--l\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputSelect, {\n        // Bug 5 fixed: Employees filter not available during loading more data\n        defaultValue: EMPTY_EMPLOYEE,\n        items: employees === null ? [] : [EMPTY_EMPLOYEE, ...employees],\n        label: \"Filter by employee\",\n        loadingLabel: \"Loading employees\",\n        parseItem: item => ({\n          value: item.id,\n          label: `${item.firstName} ${item.lastName}`\n        }),\n        onChange: async newValue => {\n          if (newValue === null) {\n            return;\n          }\n          await loadTransactionsByEmployee(newValue.id);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"RampBreak--l\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"RampGrid\",\n        children: [/*#__PURE__*/_jsxDEV(Transactions, {\n          transactions: transactions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), transactions !== null && (paginatedTransactions === null || paginatedTransactions === void 0 ? void 0 : paginatedTransactions.nextPage) && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"RampButton\",\n          disabled: paginatedTransactionsUtils.loading,\n          onClick: async () => {\n            await loadAllTransactions();\n          },\n          children: \"View More\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"URvkZ0pibykwHUNd/YIvIC3XAe0=\", false, function () {\n  return [useEmployees, usePaginatedTransactions, useTransactionsByEmployee];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Fragment","useCallback","useEffect","useMemo","InputSelect","Instructions","Transactions","useEmployees","usePaginatedTransactions","useTransactionsByEmployee","EMPTY_EMPLOYEE","React","jsxDEV","_jsxDEV","App","_s","data","employees","employeeUtils","paginatedTransactions","paginatedTransactionsUtils","transactionsByEmployee","transactionsByEmployeeUtils","transactions","_ref","_paginatedTransaction","loadAllTransactions","invalidateData","fetchAll","loadTransactionsByEmployee","employeeId","fetchById","loading","children","className","fileName","_jsxFileName","lineNumber","columnNumber","defaultValue","items","label","loadingLabel","parseItem","item","value","id","firstName","lastName","onChange","newValue","nextPage","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/bharg/OneDrive/Desktop/JOBs/Application/ramp-fe-challenge/src/App.tsx"],"sourcesContent":["import { Fragment, useCallback, useEffect, useMemo, useState } from \"react\"\nimport { InputSelect } from \"./components/InputSelect\"\nimport { Instructions } from \"./components/Instructions\"\nimport { Transactions } from \"./components/Transactions\"\nimport { useEmployees } from \"./hooks/useEmployees\"\nimport { usePaginatedTransactions } from \"./hooks/usePaginatedTransactions\"\nimport { useTransactionsByEmployee } from \"./hooks/useTransactionsByEmployee\"\nimport { EMPTY_EMPLOYEE } from \"./utils/constants\"\nimport { Employee } from \"./utils/types\"\nimport React from \"react\"\nexport function App() {\n  const { data: employees, ...employeeUtils } = useEmployees()\n  const { data: paginatedTransactions, ...paginatedTransactionsUtils } = usePaginatedTransactions()\n  const { data: transactionsByEmployee, ...transactionsByEmployeeUtils } = useTransactionsByEmployee()\n  \n\n  const transactions = useMemo(\n    () => paginatedTransactions?.data ?? transactionsByEmployee ?? null,\n    [paginatedTransactions, transactionsByEmployee]\n  )\n\n  const loadAllTransactions = useCallback(async () => {\n\n    transactionsByEmployeeUtils.invalidateData()\n\n    await employeeUtils.fetchAll()\n    await paginatedTransactionsUtils.fetchAll()\n\n  }, [employeeUtils, paginatedTransactionsUtils, transactionsByEmployeeUtils])\n\n  const loadTransactionsByEmployee = useCallback(\n    async (employeeId: string) => {\n      paginatedTransactionsUtils.invalidateData()\n      // Bug 3 FIxed: Cannot select All Employees after selecting an employee\n      if (employeeId) {\n        await transactionsByEmployeeUtils.fetchById(employeeId)\n       \n      } await paginatedTransactionsUtils.fetchAll()\n      \n    },\n    [paginatedTransactionsUtils, transactionsByEmployeeUtils]\n  )\n\n  useEffect(() => {\n    if (employees === null && !employeeUtils.loading) {\n      loadAllTransactions()\n    }\n  }, [employeeUtils.loading, employees, loadAllTransactions])\n\n  return (\n    <Fragment>\n      <main className=\"MainContainer\">\n        <Instructions />\n\n        <hr className=\"RampBreak--l\" />\n\n        <InputSelect<Employee>\n          // Bug 5 fixed: Employees filter not available during loading more data\n          defaultValue={EMPTY_EMPLOYEE}\n          items={employees === null ? [] : [EMPTY_EMPLOYEE, ...employees]}\n          label=\"Filter by employee\"\n          loadingLabel=\"Loading employees\"\n          parseItem={(item) => ({\n            value: item.id,\n            label: `${item.firstName} ${item.lastName}`,\n          })}\n          onChange={async (newValue) => {\n\n            if (newValue === null) {\n              return\n            }\n            await loadTransactionsByEmployee(newValue.id)\n          }}\n        />\n\n        <div className=\"RampBreak--l\" />\n        <div className=\"RampGrid\">\n          {/* Bug 6 Fixed: View more button not working as expected */}\n          <Transactions transactions={transactions} />\n          {transactions !== null && paginatedTransactions?.nextPage &&(\n            <button\n              className=\"RampButton\"\n              disabled={paginatedTransactionsUtils.loading}\n              onClick={async () => {\n                await loadAllTransactions()\n              }}\n            >\n              View More\n            </button>\n          )}\n        </div>\n      </main>\n    </Fragment>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}